%%{
/*
 * Copyright (c) 2017-2020, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
%%}
%%{
/*
 *  ======== Mmu.xdt ========
 */
%%}

%var Mmu = xdc.module("ti.sysbios.family.c7x.Mmu");

#if defined(__GNUC__) && !defined(__ti__)
#error "Unsupported compiler"
#else

#pragma DATA_SECTION(ti_sysbios_family_c7x_Mmu_tableArray, "`Mmu.tableArraySection`");
#pragma DATA_ALIGN(ti_sysbios_family_c7x_Mmu_tableArray, `Mmu.granuleSize`);

#pragma DATA_SECTION(ti_sysbios_family_c7x_Mmu_tableArray_NS, "`Mmu.tableArraySection_NS`");
#pragma DATA_ALIGN(ti_sysbios_family_c7x_Mmu_tableArray_NS, `Mmu.granuleSize`);

UInt64 ti_sysbios_family_c7x_Mmu_tableArray[`Mmu.tableArrayLen`][`Mmu.configInfo.tableLength`];
UInt64 ti_sysbios_family_c7x_Mmu_tableArray_NS[`Mmu.tableArrayLen`][`Mmu.configInfo.tableLength`];

#pragma DATA_SECTION(ti_sysbios_family_c7x_Mmu_tableArraySlot, ".data.ti_sysbios_family_c7x_Mmu_tableArraySlot");
#pragma DATA_ALIGN(ti_sysbios_family_c7x_Mmu_tableArraySlot, `Mmu.granuleSize`);
UInt64 ti_sysbios_family_c7x_Mmu_tableArraySlot;
#pragma DATA_SECTION(ti_sysbios_family_c7x_Mmu_tableArraySlot_NS, ".data.ti_sysbios_family_c7x_Mmu_tableArraySlot_NS");
#pragma DATA_ALIGN(ti_sysbios_family_c7x_Mmu_tableArraySlot_NS, `Mmu.granuleSize`);
UInt64 ti_sysbios_family_c7x_Mmu_tableArraySlot_NS;

#pragma DATA_SECTION(ti_sysbios_family_c7x_Mmu_level1Table, ".data.ti_sysbios_family_c7x_Mmu_level1Table");
#pragma DATA_ALIGN(ti_sysbios_family_c7x_Mmu_level1Table, `Mmu.granuleSize`);
UInt64* ti_sysbios_family_c7x_Mmu_level1Table;
#pragma DATA_SECTION(ti_sysbios_family_c7x_Mmu_level1Table_NS, ".data.ti_sysbios_family_c7x_Mmu_level1Table_NS");
#pragma DATA_ALIGN(ti_sysbios_family_c7x_Mmu_level1Table_NS, `Mmu.granuleSize`);
UInt64* ti_sysbios_family_c7x_Mmu_level1Table_NS;

#endif
